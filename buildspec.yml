version: 0.2

env:
  variables:
    SHELL: /bin/bash
    AWS_DEFAULT_REGION: eu-west-1
    APACHE_BASE_PATH: main
    APACHE_PORT: 8009
    ALTI_URL: //service-alti.dev.bgdi.ch
    API_URL: //mf-chsdi3.dev.bgdi.ch
    SHOP_URL: //shop-bgdi.dev.bgdi.ch
    DBHOST: pg-sandbox.bgdi.ch
    DBPORT: 5432
    DBSTAGING: dev
    DEPLOY_TARGET: dev
    GEODATA_STAGING: test
    GEOADMIN_FILE_STORAGE_BUCKET: public-dev-bgdi-ch
    GEOADMINHOST: mf-geoadmin3.dev.bgdi.ch
    HOST: mf-chsdi3.dev.bgdi.ch
    KEEP_VERSION: false
    WMTS_PUBLIC_HOST: tod.dev.bgdi.ch
    MODWSGI_CONFIG: production.ini
    PUBLIC_BUCKET_HOST: public.dev.bgdi.ch
    ROBOTS_FILE: robots.txt
    RANCHER_LABEL: dev
    SERVER_PORT: 6543
    SPHINXHOST: service-sphinxsearch.dev.bgdi.ch
    VECTOR_BUCKET: bgdi-grid-based-data
    WMSHOST: wms-bgdi.dev.bgdi.ch
    WSGI_PROCESSES: 1
    WSGI_THREADS: 15
    CMSGEOADMINHOST: https://cms.geo.admin.ch
    LINKEDDATAHOST: https://ld.geo.admin.ch
    CACHE_CONTROL: no-cache
    SYSTEM_PYTHON_CMD: /usr/local/bin/python3.7
    # The all important USE_PYTHON3 variable is set by the AWS CodeBuild project
  parameter-store:
    OPENTRANS_API_KEY: "/terraform-codepipeline-example/opentrans_api_key"
    PG_USER: "/terraform-codepipeline-example/pg_user"
    PG_PASSWORD: "/terraform-codepipeline-example/pg_password"
    CI_DOCKERHUB_USER: "/terraform-codepipeline-example/ci_dockerhub_user"
    CI_DOCKERHUB_PASSWORD: "/terraform-codepipeline-example/ci_dockerhub_password"

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - |-
           if [ "${USE_PYTHON3}" = 0 ]; then
             echo "Installing python 2.7"
             apt-get update && apt-get install -y python2.7 python2.7-dev virtualenv build-essential
           fi

  pre_build:
    commands:
      - echo Configuring stuff...
      - aws --version
      - exec /bin/bash
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - GITHUB_BRANCH=${CODEBUILD_WEBHOOK_HEAD_REF#refs/heads/*}
      - TODAY=$(date '+%Y%m%d')
      - IMAGE_TAG=r_${TODAY}_${COMMIT_HASH}
      - COMPOSE_PROJECT_NAME=${IMAGE_TAG}
      - |-
           if [ "${CODEBUILD_WEBHOOK_TRIGGER}" = pr/* ]; then
             PULL_REQUEST=${CODEBUILD_WEBHOOK_TRIGGER#pr/*}
           fi
      - |-
           if [ "${GIT_BRANCH}" != master  ]; then
               LATEST=${GITHUB_BRANCH:-staging}
           else
               LATEST=latest
           fi
      - echo "=========== VERSIONS ============="
      - python --version
      - python2 --version
      - python3 --version
      - bash --version
      - echo "=========== VARIABLES ============="
      - echo CODEBUILD_RESOLVED_SOURCE_VERSION=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo CODEBUILD_SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}
      - echo CODEBUILD_WEBHOOK_BASE_REF=${CODEBUILD_WEBHOOK_BASE_REF}
      - echo CODEBUILD_WEBHOOK_HEAD_REF=${CODEBUILD_WEBHOOK_HEAD_REF=}
      - echo CODEBUILD_WEBHOOK_TRIGGER=${CODEBUILD_WEBHOOK_TRIGGER}
      - echo CODEBUILD_SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}
      - echo CODEBUILD_BUILD_ID=${CODEBUILD_BUILD_ID}
      - echo CODEBUILD_SOURCE_REPO_URL=${CODEBUILD_SOURCE_REPO_URL}
      - echo COMMIT_HASH=${COMMIT_HASH}
      - echo PULL_REQUEST=${PULL_REQUEST}
      - echo GITHUB_BRANCH=${GITHUB_BRANCH}
      - echo IMAGE_TAG=${IMAGE_TAG}
      - echo BASH=${BASH}
      - echo SHELL=${SHELL}
      - echo CURRENT_DIRECTORY=$(pwd)
      - echo USE_PYTHON3=${USE_PYTHON3}
      - make help
      - echo "==================================="
  build:
    commands:
      - echo Build started on $(date)
      - make cleanall
      - make setup lint environ
      - docker build -t swisstopo/mf-chsdi3:base  -f Dockerfile.base .
      - export $(cat dev.env) && docker build -t swisstopo/mf-chsdi3:python3.7  .
      - echo Build completed on $(date)
      
  post_build:
    commands:
      - echo Testing...
      - docker-compose up -d
      - echo Testing
      - DOCKER_CONTAINER_ID=$(docker ps -aq --filter status="running" --filter ancestor="swisstopo/mf-chsdi3:python3.7") && if [ -z "$DOCKER_CONTAINER_ID"  ]; then exit 1; fi
      - echo "Pusing to dockerhub"
      - docker exec -i "$DOCKER_CONTAINER_ID"   .venv/bin/nosetests  tests/functional
      - docker login -u "$CI_DOCKERHUB_USER" -p "$CI_DOCKERHUB_PASSWORD"
      - docker push "swisstopo/mf-chsdi3:base"
      - docker push "swisstopo/mf-chsdi3:python3.7"
      - echo "Great success"

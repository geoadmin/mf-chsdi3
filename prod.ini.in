###
# pylons app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
#
# Use this file exclusively on docker/frankfurt/python3 and k8s int and prod environment

[app:main]
use = config:base_version.ini

###
# wsgi server configuration
###
[server:main]
use = config:base.ini

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, chsdi, sqlalchemy

[logger_root]
level = ${PY_ROOT_LOG_LEVEL}
handlers = console

[logger_chsdi]
level = ${PY_CHSDI_LOG_LEVEL}
handlers = console
qualname = chsdi

[logger_sqlalchemy]
level = ${PY_SQLALCHEMY_LOG_LEVEL}
handlers = console
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handlers]
keys = console

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = ${PY_ROOT_LOG_LEVEL}
formatter = apache

[formatters]
keys = apache

[formatter_apache]
# NOTES:
# - we use %(message)r instead of %(message)s in order to keep multiline logs as one entry
# - The logs are going through apache logging system, which will add additionals informations;
#   timestamp, request_id, headers, process and thread IDs, ... (see 25-mf-chsdi3.conf.in)
format = app=CHSDI %(levelname)s [%(module)s/%(name)s] %(message)r
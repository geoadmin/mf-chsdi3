[buildout]
parts = eggs
        activate
        template
        modwsgi
        mapproxy
        print-config
        print-war
        po2mo
        validate-py
        doc
        node-modules
        lessc
        ol3-install
        ol3-serverconfig
develop = .
index = http://pypi.camptocamp.net/pypi/
allow-hosts = pypi.camptocamp.net
find-links = ./local_eggs/
             http://pypi.camptocamp.net/internal-pypi/index/c2cgeoportal
             http://pypi.camptocamp.net/internal-pypi/index/tileforge
newest = false
prefer-final = true
versions = versions

# isolate ourself from the System Python
allowed-eggs-from-site-packages = osgeo.*
exec-sitecustomize = false

develop-eggs-directory = buildout/develop-eggs
eggs-directory = buildout/eggs
parts-directory = buildout/parts
bin-directory = buildout/bin

[versions]
# list of the dependencies versions
# (to be copied from the dumppickedversions output)
argparse = 1.2.1
autopep8 = 0.9.3
Babel = 0.9.6
boto = 2.29.1
c2c.recipe.msgfmt = 0.2.1
collective.recipe.cmd = 0.8
collective.recipe.modwsgi = 1.7-ga3
coverage = 3.6
cp.recipe.cmd = 0.4
decorator = 3.4.0
distribute = 0.6.22
evg.recipe.activate = 0.5
geoalchemy2 = 0.2.4-ga3
geojson = 1.0.1
hexagonit.recipe.download = 1.6
httplib2 = 0.9
lxml = 2.2.8
Mako = 1.0.0
MapProxy = 1.7.0
nose = 1.2.1
ordereddict = 1.1
OWSLib = 0.8.8
papyrus = 2.0dev1
PasteDeploy = 1.5.0
pep8 = 1.4.6
polib = 1.0.3
psycopg2 = 2.5.4
Pygments = 2.0
pyramid = 1.5.2
pyramid-debugtoolbar = 1.0.9
pyramid-mako = 1.0.2
pyramid_tm = 0.7
pystache = 0.5.3
pyflakes = 0.8.1
PyYAML = 3.10
qrcode = 4.0.4
regex = 2014.02.19
repoze.lru = 0.6
requests = 2.5.1
shapely = 1.3.3
simplejson = 3.1.0
six = 1.5.0
Sphinx = 1.2.3
sphinx_rtd_theme = 0.1.6-ga3
SQLAlchemy = 0.9.8
transaction = 1.4.1
translationstring = 1.1
unittest2 = 0.5.1
venusian = 1.0a7
waitress = 0.8.9
WebOb = 1.4
WebTest = 2.0.4
weberror = 0.10.3
xlrd = 0.9.1
xlwt = 0.7.5
z3c.recipe.filetemplate = 2.2.0
z3c.recipe.scripts = 1.0.1
zc.buildout = 1.5.2
zc.recipe.egg = 1.3.2
zope.deprecation = 4.0.2
zope.exceptions = 4.0.6
zope.interface = 4.0.5
zope.sqlalchemy = 0.7.2
zope.testing = 4.1.2

[vars]
# apache
apache_base_path = main
# urls
host = mf-chsdi3.bgdi.admin.ch
# database - not in this file.....
server_port = 6543
# Geodata staging
geodata_staging = prod
# the Unix user under which the modwsgi daemon processes are executed,
# can be overriden in development-specific buildout config files
modwsgi_user = www-data
# database host
dbhost = localhost
# database port
dbport = 5432
# database name
db = this_is_a_dummy_db_name
# sqlalchemy schema
schema = webapp
# database parent schema
parent_schema =
# api service url
api_url = //mf-chsdi3.bgdi.admin.ch
# robots file
robots_file = robots.txt
# deploy_target
deploy_target = prod
#wsgi daemon threads
wsgi_threads=30
# print files directory
print_temp_dir = /var/cache/print
#mapproxy wsgi options
mapproxy_wsgi_options=processes=4 threads=32
#zadara
zadara_dir=/var/local/cartoweb/downloads/
#http proxy
http_proxy=http://ec2-54-93-109-29.eu-central-1.compute.amazonaws.com:80

[mapproxy]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:bin-directory}/python ${buildout:directory}/mapproxy/createWsgi.py  

[mapproxy-config]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:bin-directory}/python ${buildout:directory}/mapproxy/scripts/mapproxify.py

[po2mo]
recipe = c2c.recipe.msgfmt
po-directory = chsdi/locale/

[potranslate]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:bin-directory}/python ${buildout:directory}/translations/translation2po.py ${buildout:directory}/chsdi/locale/

[eggs]
recipe = z3c.recipe.scripts
eggs = 
    chsdi
    Sphinx
dependent-scripts = true
interpreter = python
initialization =
    import paste.script.command
    for egg in ['PasteScript', 'Pyramid']: paste.script.command.system_plugins.append(egg)

[activate]
recipe = evg.recipe.activate

[modwsgi]
recipe = collective.recipe.modwsgi
eggs = chsdi
config-file = ${buildout:directory}/production.ini

[template]
recipe = z3c.recipe.filetemplate
source-directory = .
exclude-directories = buildout
interpreted-options = app_version = __import__('time').strftime('%s')
                      apache_entry_path = '' if options.get('apache_base_path') == 'main' else ('/' + options.get('apache_base_path'))
                      git_branch = __import__('subprocess').check_output(['git', 'rev-parse', '--symbolic-full-name', '--abbrev-ref', 'HEAD']).rstrip()

extends = vars

[print-config]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    echo '# File managed by zc.buildout mf-chsdi3'  > /srv/tomcat/tomcat1/bin/setenv-local.sh 
    echo 'export JAVA_XMX="2G"'  >> /srv/tomcat/tomcat1/bin/setenv-local.sh 


[print-war]
recipe = c2c.recipe.jarfile
mode = update
basedir = print/
basewar = print-servlet-2.0-SNAPSHOT-IMG-MAGICK.war 
input = ${print-war:basewar} *.yaml *.png WEB-INF
output = /srv/tomcat/tomcat1/webapps/print-chsdi3-${vars:apache_base_path}.war

[doc]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    cd chsdi/static/doc && ${buildout:bin-directory}/sphinx-build -b html source build

[validate-py]
recipe = collective.recipe.cmd
on_install = true
on_update = true
shell = /bin/bash
folders = mapproxy/ chsdi/*.py chsdi/lib/*.py chsdi/models chsdi/views chsdi/tests
cmds =
    FILES=$(find ${validate-py:folders} -name \*.py)
    FIXME+=$(echo $FILES | xargs ./buildout/bin/pep8 --ignore=E501)
    FIXME+=$(echo -e "\n ")
    FIXME+=$(echo $FILES | xargs ./buildout/bin/pyflakes)

    if [[ $FIXME == *"chsdi"* || $FIXME == *"mapproxy"* ]];
    then
      echo "$(tput setaf 1)$FIXME$(tput sgr0)" &&
      echo "You can fix automatically some styling errors using the following command:" &&
      echo "buildout/bin/autopep8 -v -i -a --ignore=E501 <filename>" &&
      exit 1
    fi


[node-modules]
recipe = collective.recipe.cmd
on_install = true
cmds =
    mkdir -p node_modules
    npm install less@1.5.0

[lessc]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    node_modules/.bin/lessc -ru --clean-css chsdi/static/less/extended.less chsdi/static/css/extended.min.css

[ol3-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    if ! [ -d chsdi/static/js/ol3 ];
    then
      cd ${buildout:directory}/chsdi/static/js/ && git clone https://github.com/geoadmin/ol3.git
      cd ol3 && npm install && API_URL=${vars:api_url} ${buildout:bin-directory}/python build-ga.py
      cd ${buildout:directory}
    fi

[ol3-serverconfig]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    if  [ -d chsdi/static/js/ol3 ];
    then
      cd ${buildout:directory}/chsdi/static/js/ol3
      rm -f ${buildout:directory}/chsdi/static/js/serverconfig*.js &&
      API_URL=${vars:api_url} ${buildout:bin-directory}/python build-ga.py build/serverconfig &&
      cp ${buildout:directory}/chsdi/static/js/ol3/build/*config*.js  ${buildout:directory}/chsdi/static/js/ &&
      cd ${buildout:directory}
    fi

[ol3-update]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    cd ${buildout:directory}/chsdi/static/js/ol3
    git pull origin master
    rm -f ${buildout:directory}/chsdi/static/js/ol3/build/ga.css &&
    rm -f ${buildout:directory}/chsdi/static/js/ol3/build/ol.css &&
    rm -f ${buildout:directory}/chsdi/static/js/ol3/build/ga*.js &&
    rm -f ${buildout:directory}/chsdi/static/js/ol3/build/marker.png &&
    npm install && API_URL=${vars:api_url} ${buildout:bin-directory}/python build-ga.py &&
    cp ${buildout:directory}/chsdi/static/js/ol3/build/ga.css ${buildout:directory}/chsdi/static/css/ &&
    cp ${buildout:directory}/chsdi/static/js/ol3/build/ol.css ${buildout:directory}/chsdi/static/css/ &&
    cp ${buildout:directory}/chsdi/static/js/ol3/css/marker.png ${buildout:directory}/chsdi/static/css/ &&
    cp ${buildout:directory}/chsdi/static/js/ol3/build/ga*.js ${buildout:directory}/chsdi/static/js/ &&
    cp ${buildout:directory}/chsdi/static/js/ol3/resources/EPSG* ${buildout:directory}/chsdi/static/js/

[nosetest-ini]
recipe = z3c.recipe.filetemplate
files = production.ini development.ini
interpreted-options = app_version = __import__('time').strftime('%s')
                      apache_entry_path = '' if options.get('apache_base_path') == 'main' else ('/' + options.get('apache_base_path'))
extends = vars

